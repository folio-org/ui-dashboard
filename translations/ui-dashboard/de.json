{
    "meta.title": "Dashboard",
    "noWidgets": "Neues Widget zum Dashboard hinzufügen",
    "dashboard.newWidget": "{label} Widget",
    "widgetForm.createWidget": "Neues Widget",
    "widgetFooter.refreshButtonLabel": "Widget aktualisieren: {widgetName}",
    "widgetForm.widgetName": "Widget-Name",
    "widgetForm.widgetDefinition": "Widget-Definition",
    "widgetForm.changeDefinitionWarningModal.heading": "Änderung der Definition bestätigen",
    "widgetForm.changeDefinitionWarningModal.message": "Ändern der Definition wird das Formular zurücksetzen. Wirklich fortfahren?",
    "widgetForm.changeDefinitionWarningModal.continue": "Fortfahren",
    "simpleSearchForm.filters": "Filter",
    "simpleSearchForm.filters.addFilter": "Filter hinzufügen",
    "simpleSearchForm.filters.removeFilter": "Filter {index} entfernen",
    "simpleSearchForm.filters.filter": "Filter {index}",
    "simpleSearchForm.filters.filterBy": "Filtern nach",
    "simpleSearchForm.filters.filterAlreadyPresent": "Filter bereits im Formular vorhanden",
    "simpleSearchForm.filters.addFilterTooltip": "Einen Filter zur Widget-Konfiguration hinzufügen",
    "simpleSearchForm.filters.filterField.comparator": "Komparator",
    "simpleSearchForm.filters.filterField.value": "Wert",
    "simpleSearchForm.filters.filterField.isNull": "ist null",
    "simpleSearchForm.filters.filterField.rule.addRule": "Regel hinzufügen",
    "simpleSearchForm.filters.filterField.rule.removeRule": "Regel {index} entfernen",
    "simpleSearchForm.filters.filterField.rule": "Regel {index}",
    "simpleSearchForm.filters.filterField.rule.or": "ODER",
    "simpleSearchForm.results": "Ergebnisanzeige",
    "simpleSearchForm.results.addResult": "Spalte hinzufügen",
    "simpleSearchForm.sort": "Sortieren",
    "simpleSearchForm.sort.sortBy": "Sortieren nach",
    "simpleSearchForm.sort.sortDirection": "Sortierrichtung",
    "simpleSearchForm.configurableProperties.numberOfRows": "Anzahl der Zeilen",
    "simpleSearchForm.configurableProperties.urlLink": "URL-Link",
    "simpleSearch.widget.nFoundBadge": "{total} gefunden",
    "simpleSearch.widget.linkText": "Link zur App",
    "simpleSearchForm.filters.dateFilterField.today": "Heute (Variable)",
    "simpleSearchForm.filters.dateFilterField.days": "Tage",
    "simpleSearchForm.filters.dateFilterField.weeks": "Wochen",
    "simpleSearchForm.filters.dateFilterField.months": "Monate",
    "simpleSearchForm.filters.dateFilterField.years": "Jahre",
    "simpleSearchForm.filters.dateFilterField.offset": "Versatz",
    "simpleSearchForm.filters.dateFilterField.offsetMethod": "Versatzmethode",
    "simpleSearchForm.filters.dateFilterField.timeUnit": "Zeiteinheit",
    "simpleSearchForm.filters.uuidFilterField.currentUser": "Ich (Variable)",
    "simpleSearchForm.filters.filterField.comparator.Date.==": "ist",
    "simpleSearchForm.filters.filterField.comparator.Date.!=": "ist nicht",
    "simpleSearchForm.filters.filterField.comparator.Date.>": "nach",
    "simpleSearchForm.filters.filterField.comparator.Date.>=": "am oder nach",
    "simpleSearchForm.filters.filterField.comparator.Date.<": "bevor",
    "simpleSearchForm.filters.filterField.comparator.Date.<=": "am oder vor",
    "simpleSearchForm.filters.filterField.comparator.Date.isNull": "ist null",
    "simpleSearchForm.filters.filterField.comparator.Date.isNotNull": "ist nicht null",
    "simpleSearchForm.filters.filterField.comparator.String.==": "ist",
    "simpleSearchForm.filters.filterField.comparator.String.!=": "ist nicht",
    "simpleSearchForm.filters.filterField.comparator.String.=~": "enthält",
    "simpleSearchForm.filters.filterField.comparator.String.!~": "enthält nicht",
    "simpleSearchForm.filters.filterField.comparator.String.isNull": "ist null",
    "simpleSearchForm.filters.filterField.comparator.String.isNotNull": "ist nicht null",
    "simpleSearchForm.filters.filterField.comparator.Float.==": "ist gleich",
    "simpleSearchForm.filters.filterField.comparator.Float.!=": "ist nicht gleich",
    "simpleSearchForm.filters.filterField.comparator.Float.>": "größer als",
    "simpleSearchForm.filters.filterField.comparator.Float.>=": "größer als oder gleich",
    "simpleSearchForm.filters.filterField.comparator.Float.<": "kleiner als",
    "simpleSearchForm.filters.filterField.comparator.Float.<=": "kleiner als oder gleich",
    "simpleSearchForm.filters.filterField.comparator.Float.isNull": "ist null",
    "simpleSearchForm.filters.filterField.comparator.Float.isNotNull": "ist nicht null",
    "simpleSearchForm.filters.filterField.comparator.Integer.==": "ist gleich",
    "simpleSearchForm.filters.filterField.comparator.Integer.!=": "ist nicht gleich",
    "simpleSearchForm.filters.filterField.comparator.Integer.>": "größer als",
    "simpleSearchForm.filters.filterField.comparator.Integer.>=": "größer als oder gleich",
    "simpleSearchForm.filters.filterField.comparator.Integer.<": "kleiner als",
    "simpleSearchForm.filters.filterField.comparator.Integer.<=": "kleiner als oder gleich",
    "simpleSearchForm.filters.filterField.comparator.Integer.isNull": "ist null",
    "simpleSearchForm.filters.filterField.comparator.Integer.isNotNull": "ist nicht null",
    "simpleSearchForm.filters.filterField.comparator.Boolean.==": "ist",
    "simpleSearchForm.filters.filterField.comparator.Boolean.!=": "ist nicht",
    "simpleSearchForm.filters.filterField.comparator.Boolean.isNull": "ist null",
    "simpleSearchForm.filters.filterField.comparator.Boolean.isNotNull": "ist nicht null",
    "simpleSearchForm.filters.filterField.comparator.Enum.==": "ist",
    "simpleSearchForm.filters.filterField.comparator.Enum.!=": "ist nicht",
    "simpleSearchForm.filters.filterField.comparator.Enum.isNull": "ist null",
    "simpleSearchForm.filters.filterField.comparator.Enum.isNotNull": "ist nicht null",
    "simpleSearchForm.filters.filterField.comparator.UUID.==": "ist",
    "simpleSearchForm.filters.filterField.comparator.UUID.!=": "ist nicht",
    "simpleSearchForm.filters.filterField.comparator.UUID.isNull": "ist null",
    "simpleSearchForm.filters.filterField.comparator.UUID.isNotNull": "ist nicht null",
    "loading": "Wird geladen",
    "dashboard.reorderForm.widget.widgetname": "Widget-Name",
    "simpleSearchForm.filters.uuidFilterField.absoluteValueWarning": "Eine Benutzer-UUID oder ein aktuelles Benutzer-Token muss eingegeben werden",
    "simpleSearchForm.results.column": "Spalte",
    "simpleSearchForm.results.label": "Label",
    "error": "Ein Fehler ist aufgetreten.",
    "error.noDashWithThatName": "Dashboard {name} kann nicht gefunden werden. Bitte URL überprüfen.",
    "error.noDashboardsForUser": "Für diesen Benutzer gibt es keine Dashboards.",
    "error.noWidgetComponentForType": "Keine Widget-Komponente für Typ: {widgetType}",
    "error.noWidgetFormComponentForType": "Keine Widget-Form-Komponente für Typ: {widgetType}",
    "canvas.actions": "Aktionen",
    "dashboard.reorderForm.dragAndDropHandleAria": "Reihenfolge von {widgetName} ändern ({index})",
    "simpleSearchForm.filters.dateFilterField.date": "Datum",
    "simpleSearchForm.filters.dateFilterField.uuid": "UUID",
    "simpleSearchForm.results.columns": "Spalten",
    "simpleSearchForm.results.resultDeleteAria": "Spalte {index} entfernen",
    "widgetHeader.actionsButtonLabel": "Aktionen für Widget: {widgetName}",
    "widgetHeader.editButtonLabel": "Widget bearbeiten: {widgetName}",
    "widgetHeader.editButton": "Bearbeiten",
    "widgetHeader.deleteButtonLabel": "Widget löschen: {widgetName}",
    "simpleSearchForm.filters.dateFilterField.offsetValidation": "Versatz muss größer oder gleich 0 und darf nicht größer als 999 sein",
    "simpleSearchForm.results.minimumWarning": "Fehler: Ergebnisanzeige muss mindestens eine Spalte enthalten.",
    "simpleSearch.widget.linkTextForWidget": "{linkText} für Widget: {widgetName}",
    "dashboard.deleteWidget": "Widget löschen",
    "dashboard.deleteWidgetConfirmMessage": "Widget <strong>{name}</strong> wird <strong>gelöscht</strong>.",
    "simpleSearchForm.filters.filterField.comparator.Date.isSet": "ist belegt",
    "simpleSearchForm.filters.filterField.comparator.Date.isNotSet": "ist nicht belegt",
    "simpleSearchForm.filters.filterField.comparator.String.isSet": "ist belegt",
    "simpleSearchForm.filters.filterField.comparator.String.isNotSet": "ist nicht belegt",
    "simpleSearchForm.filters.filterField.comparator.Link.==": "ist",
    "simpleSearchForm.filters.filterField.comparator.Link.!=": "ist nicht",
    "simpleSearchForm.filters.filterField.comparator.Link.=~": "enthält",
    "simpleSearchForm.filters.filterField.comparator.Link.!~": "enthält nicht",
    "simpleSearchForm.filters.filterField.comparator.Link.isNull": "ist null",
    "simpleSearchForm.filters.filterField.comparator.Link.isNotNull": "ist nicht null",
    "simpleSearchForm.filters.filterField.comparator.Link.isSet": "ist belegt",
    "simpleSearchForm.filters.filterField.comparator.Link.isNotSet": "ist nicht belegt",
    "simpleSearchForm.filters.filterField.comparator.Array.isEmpty": "Nein",
    "simpleSearchForm.filters.filterField.comparator.Array.isNotEmpty": "Ja",
    "simpleSearchForm.filters.filterField.comparator.Float.isSet": "ist belegt",
    "simpleSearchForm.filters.filterField.comparator.Float.isNotSet": "ist nicht belegt",
    "simpleSearchForm.filters.filterField.comparator.Integer.isSet": "ist belegt",
    "simpleSearchForm.filters.filterField.comparator.Integer.isNotSet": "ist nicht belegt",
    "simpleSearchForm.filters.filterField.comparator.Boolean.isSet": "ist belegt",
    "simpleSearchForm.filters.filterField.comparator.Boolean.isNotSet": "ist nicht belegt",
    "simpleSearchForm.filters.filterField.comparator.Enum.isSet": "ist belegt",
    "simpleSearchForm.filters.filterField.comparator.Enum.isNotSet": "ist nicht belegt",
    "simpleSearchForm.filters.filterField.comparator.UUID.isSet": "ist belegt",
    "simpleSearchForm.filters.filterField.comparator.UUID.isNotSet": "ist nicht belegt",
    "simpleSearchForm.filters.filterField.comparator.DateTime.==": "ist",
    "simpleSearchForm.filters.filterField.comparator.DateTime.!=": "ist nicht",
    "simpleSearchForm.filters.filterField.comparator.DateTime.>": "nach",
    "simpleSearchForm.filters.filterField.comparator.DateTime.>=": "am oder nach",
    "simpleSearchForm.filters.filterField.comparator.DateTime.<": "bevor",
    "simpleSearchForm.filters.filterField.comparator.DateTime.<=": "am oder vor",
    "simpleSearchForm.filters.filterField.comparator.DateTime.isNull": "ist null",
    "simpleSearchForm.filters.filterField.comparator.DateTime.isNotNull": "ist nicht null",
    "simpleSearchForm.filters.filterField.comparator.DateTime.isSet": "ist belegt",
    "simpleSearchForm.filters.filterField.comparator.DateTime.isNotSet": "ist nicht belegt",
    "simpleSearchForm.matches": "Suche",
    "appMenu.keyboardShortcuts": "Tastenkürzel",
    "simpleSearchForm.filters.filterField.rule.and": "UND",
    "widgetForm.editWidget": "Bearbeiten - {widgetName}",
    "simpleSearchForm.filters.dateFilterField.invalidDate": "Bitte ein Datum im Format {dateFormat} eingeben, um fortzufahren",
    "simpleSearchForm.filters.dateFilterField.beforeToday": "vor heute",
    "simpleSearchForm.filters.dateFilterField.afterToday": "nach heute",
    "simpleSearchForm.filters.dateFilterField.fixedDate": "Festes Datum",
    "simpleSearchForm.filters.dateFilterField.number": "Anzahl",
    "simpleSearchForm.filters.dateFilterField.infoPopover": "Das Datum kann variabel oder fest sein. Für ein variables Datum die Werte der drei Felder Zahl, Zeiteinheit und Wann im ersten Optionsfeld festlegen. Das zweite Optionsfeld verwenden, um ein festes Datum einzugeben.",
    "httpError": "HTTPError: {errorCode} {errorText}",
    "dashboard.errorDetailsDescription": "Folgendes ist aufgetreten, wodurch die Anzeige von Inhalten im Widget verhindert wurde:",
    "dashboard.copyErrorButtonAriaLabel": "Fehler in Zwischenablage kopieren",
    "dashboard.errorDetails": "Fehlerdetails",
    "dashboard.close": "Schließen",
    "dashboard.copy": "Kopieren",
    "dashboard.copied": "Kopiert",
    "simpleSearch.widget.noResultsFound": "Keine Ergebnisse gefunden",
    "simpleSearch.contentError": "Inhalt kann nicht angezeigt werden.",
    "simpleSearch.errorDetails": "Fehlerdetails",
    "simpleSearch.errorDescription": "Folgendes ist aufgetreten, wodurch die Anzeige von Inhalten im Widget verhindert wurde:",
    "simpleSearchForm.filters.dateFilterField.beforeOrAfterToday": "Vor oder nach heute",
    "simpleSearchForm.filters.dateFilterField.lengthOfTime": "Länge der Zeit",
    "simpleSearchForm.filters.dateFilterField.relativeDate": "Relatives Datum",
    "error.duplicateColumn": "Doppelte Spalte, bitte korrigieren",
    "shortcut.new": "Neues Widget erstellen",
    "shortcut.edit": "Widget bearbeiten",
    "shortcut.save": "Formularänderungen speichern",
    "tokenDatePicker.validation.invalidDate": "Bitte ein Datum im Format {dateFormat} eingeben, um fortzufahren",
    "tokenDatePicker.validation.invalidOffset": "Versatz muss größer oder gleich 0 und darf nicht größer als 999 sein",
    "tokenDatePicker.fixedDate": "Festes Datum",
    "tokenDatePicker.relativeDate": "Relatives Datum",
    "tokenDatePicker.today": "Heute (relativ)",
    "tokenUserPicker.me": "Ich (relativ)",
    "tokenUserPicker.user": "Feste Person",
    "tokenUserPicker.validation.invalidUser": "Bitte eine Person auswählen, um fortzufahren",
    "simpleSearchForm.filters.uuidFilterField.emptyWarning": "Bitte gültige UUID angeben, um fortzufahren",
    "saveAndClose": "Save & close",
    "okay": "Okay",
    "dashboardUsers.userAccess": "User access - {dashboardName}",
    "dashboardUsers.user": "User",
    "dashboardUsers.status": "Status",
    "dashboardUsers.status.active": "Active",
    "dashboardUsers.status.inactive": "Inactive",
    "dashboardUsers.status.error": "Error",
    "dashboardUsers.email": "Email",
    "dashboardUsers.remove": "Remove",
    "dashboardUsers.addUser": "Add user",
    "dashboardUsers.accessWarning": "<strong>Warning</strong>: The logged in user does not exist as a user on this dashboard. Access is being granted through a high level system permission (Okapi gateway permission \"servint.dashboard.admin\").",
    "dashboardUsers.warningInactive": "<strong>Warning</strong>: user <strong>{user}</strong> is inactive and should be removed from this dashboard.",
    "dashboardUsers.errorMissing": "<strong>Error</strong>: user <strong>{user}</strong> cannot be found in the Users app. This could mean that the user has been permanently deleted. If the problem persists the user should be removed from this dashboard.",
    "dashboardUsers.removeUsers": "Remove user(s)",
    "dashboardUsers.removeUsers.message": "The following user(s) will be removed and no longer has access to the dashboard \"{name}\".",
    "dashboardUsers.removeUsers.finalMessage": "Select <strong>Save & close</strong> to go ahead with all updates or <strong>Cancel</strong> to continue editing",
    "dashboardUsers.duplicateUser": "Error: Duplicate user",
    "dashboardUsers.duplicateUser.message": "<strong>{user}</strong> was not added as this user already has access to the dashboard <strong>{name}</strong>",
    "dashboardUsers.removeUser": "Remove user \"{name}\"",
    "new": "New",
    "delete": "Delete",
    "reorderWidgets": "Order widgets",
    "newWidget": "New widget",
    "userAccess": "User access",
    "allDashboards": "All dashboards",
    "newDashboard": "New dashboard",
    "editDashboard": "Edit dashboard",
    "deleteDashboard": "Delete dashboard",
    "deleteDashboard.message": "Dashboard <strong>{name}</strong> will be <strong>deleted</strong>.",
    "manageDashboards": "Manage dashboards",
    "accessLevel": "Access level",
    "accessLevel.view": "View",
    "accessLevel.edit": "Edit",
    "accessLevel.manage": "Manage",
    "default": "Default",
    "dashboard.name": "Name",
    "dashboard.name.info": "The short name will used to create the menu button for the dashboard. The number of characters is limited to 25 maximum",
    "dashboard.name.tooLong": "Dashboard name is limited to 25 characters.",
    "dashboard.description": "Description",
    "userDashboards.dashboardOrder": "Dashboard menu order",
    "userDashboards.dashboardOrder.dragAndDropHandleAria": "Change order of {dashboard} ({index})"
}