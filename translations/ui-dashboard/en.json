{
  "meta.title": "Dashboard",
  "noWidgets": "Add a new widget to your dashboard",
  "error": "An error occurred.",
  "error.noDashWithThatName": "Dashboard {name} cannot be found. Please check the URL.",
  "error.noDashboardsForUser": "No dashboards exist for this user.",
  "error.noWidgetComponentForType": "No widget component for type: {widgetType}",
  "error.noWidgetFormComponentForType": "No widget form component for type: {widgetType}",
  "canvas.actions": "Actions",

  "httpError": "HTTPError: {errorCode} {errorText}",

  "appMenu.keyboardShortcuts": "Keyboard shortcuts",

  "loading": "Loading",

  "dashboardHeader.new": "New",
  "dashboardHeader.reorder": "Edit widget display order",

  "dashboard.newWidget": "{label} widget",

  "dashboard.reorderForm.paneTitle": "Edit dashboard",
  "dashboard.reorderForm.dragAndDropHandleAria": "Change order of {widgetName} ({index})",
  "dashboard.reorderForm.widget.widgetname": "Widget name",

  "dashboard.deleteWidget": "Delete widget",
  "dashboard.delete": "Delete",
  "dashboard.deleteWidgetConfirmMessage": "Widget <strong>{name}</strong> will be <strong>deleted</strong>.",
  "dashboard.errorDetailsDescription": "The following occured, preventing the display of content in the widget:",
  "dashboard.copyErrorButtonAriaLabel": "Copy error to clipholder",
  "dashboard.errorDetails": "Error details",
  "dashboard.close": "Close",
  "dashboard.copy": "Copy",
  "dashboard.copied": "Copied",

  "widgetHeader.actionsButtonLabel": "Actions for widget: {widgetName}",
  "widgetHeader.editButtonLabel": "Edit widget: {widgetName}",
  "widgetHeader.editButton": "Edit",
  "widgetHeader.deleteButtonLabel": "Delete widget: {widgetName}",
  "widgetHeader.deleteButton": "Delete",
  "widgetFooter.refreshButtonLabel": "Refresh widget: {widgetName}",

  "widgetForm.editWidget": "Edit - {widgetName}",
  "widgetForm.createWidget": "New widget",
  "widgetForm.widgetName": "Widget name",
  "widgetForm.widgetDefinition": "Widget definition",
  "widgetForm.changeDefinitionWarningModal.heading": "Confirm change of definition",
  "widgetForm.changeDefinitionWarningModal.message": "Changing definition will cause the form to reset, are you sure you want to continue?",
  "widgetForm.changeDefinitionWarningModal.continue": "Continue",

  "simpleSearchForm.filters": "Filters",
  "simpleSearchForm.filters.addFilter": "Add filter",
  "simpleSearchForm.filters.removeFilter": "Remove filter {index}",
  "simpleSearchForm.filters.filter": "Filter {index}",
  "simpleSearchForm.filters.filterBy": "Filter by",
  "simpleSearchForm.filters.filterAlreadyPresent": "Filter already present in the form",
  "simpleSearchForm.filters.addFilterTooltip": "Add a filter to your widget configuration",
  "simpleSearchForm.filters.filterField.comparator": "Comparator",
  "simpleSearchForm.filters.filterField.value": "Value",
  "simpleSearchForm.filters.filterField.isNull": "Is null",

  "simpleSearchForm.filters.filterField.rule.addRule": "Add rule",
  "simpleSearchForm.filters.filterField.rule.removeRule": "Remove rule {index}",
  "simpleSearchForm.filters.filterField.rule": "Rule {index}",
  "simpleSearchForm.filters.filterField.rule.or": "OR",
  "simpleSearchForm.filters.filterField.rule.and": "AND",
  "simpleSearchForm.filters.dateFilterField.today": "Today (variable)",

  "simpleSearchForm.filters.dateFilterField.days": "Days",
  "simpleSearchForm.filters.dateFilterField.weeks": "Weeks",
  "simpleSearchForm.filters.dateFilterField.months": "Months",
  "simpleSearchForm.filters.dateFilterField.years": "Years",

  "simpleSearchForm.filters.dateFilterField.beforeToday": "Before today",
  "simpleSearchForm.filters.dateFilterField.afterToday": "After today",
  "simpleSearchForm.filters.dateFilterField.when": "When",
  "simpleSearchForm.filters.dateFilterField.fixedDate": "Fixed date",
  "simpleSearchForm.filters.dateFilterField.number": "Number",

  "simpleSearchForm.filters.dateFilterField.infoPopover": "The Date can be variable or fixed. For a variable date set the values of the three fields Number, Time unit and When in the first radio button. Use the second radio button to enter a fixed date.",
  
  "simpleSearchForm.filters.dateFilterField.offset": "Offset",
  "simpleSearchForm.filters.dateFilterField.offsetValidation": "Offset must be greater than or equal to 0 and no larger than 999",
  "simpleSearchForm.filters.dateFilterField.offsetMethod": "Offset method",
  "simpleSearchForm.filters.dateFilterField.timeUnit": "Time unit",
  "simpleSearchForm.filters.dateFilterField.date": "Date",
  "simpleSearchForm.filters.dateFilterField.invalidDate": "Please enter a date in the format {dateFormat} to continue",

  "simpleSearchForm.filters.uuidFilterField.currentUser": "Me (variable)",
  "simpleSearchForm.filters.uuidFilterField.absoluteValueWarning": "A user UUID or current user token must be input",
  "simpleSearchForm.filters.dateFilterField.uuid": "UUID",


  "simpleSearchForm.filters.filterField.comparator.Date.==": "is",
  "simpleSearchForm.filters.filterField.comparator.Date.!=": "is not",
  "simpleSearchForm.filters.filterField.comparator.Date.>": "after",
  "simpleSearchForm.filters.filterField.comparator.Date.>=": "on or after",
  "simpleSearchForm.filters.filterField.comparator.Date.<": "before",
  "simpleSearchForm.filters.filterField.comparator.Date.<=": "on or before",
  "simpleSearchForm.filters.filterField.comparator.Date.isNull": "is null",
  "simpleSearchForm.filters.filterField.comparator.Date.isNotNull": "is not null",
  "simpleSearchForm.filters.filterField.comparator.Date.isSet": "is set",
  "simpleSearchForm.filters.filterField.comparator.Date.isNotSet": "is not set",

  "simpleSearchForm.filters.filterField.comparator.DateTime.==": "is",
  "simpleSearchForm.filters.filterField.comparator.DateTime.!=": "is not",
  "simpleSearchForm.filters.filterField.comparator.DateTime.>": "after",
  "simpleSearchForm.filters.filterField.comparator.DateTime.>=": "on or after",
  "simpleSearchForm.filters.filterField.comparator.DateTime.<": "before",
  "simpleSearchForm.filters.filterField.comparator.DateTime.<=": "on or before",
  "simpleSearchForm.filters.filterField.comparator.DateTime.isNull": "is null",
  "simpleSearchForm.filters.filterField.comparator.DateTime.isNotNull": "is not null",
  "simpleSearchForm.filters.filterField.comparator.DateTime.isSet": "is set",
  "simpleSearchForm.filters.filterField.comparator.DateTime.isNotSet": "is not set",

  "simpleSearchForm.filters.filterField.comparator.String.==": "is",
  "simpleSearchForm.filters.filterField.comparator.String.!=": "is not",
  "simpleSearchForm.filters.filterField.comparator.String.=~": "contains",
  "simpleSearchForm.filters.filterField.comparator.String.!~": "does not contain",
  "simpleSearchForm.filters.filterField.comparator.String.isNull": "is null",
  "simpleSearchForm.filters.filterField.comparator.String.isNotNull": "is not null",
  "simpleSearchForm.filters.filterField.comparator.String.isSet": "is set",
  "simpleSearchForm.filters.filterField.comparator.String.isNotSet": "is not set",

  "simpleSearchForm.filters.filterField.comparator.Link.==": "is",
  "simpleSearchForm.filters.filterField.comparator.Link.!=": "is not",
  "simpleSearchForm.filters.filterField.comparator.Link.=~": "contains",
  "simpleSearchForm.filters.filterField.comparator.Link.!~": "does not contain",
  "simpleSearchForm.filters.filterField.comparator.Link.isNull": "is null",
  "simpleSearchForm.filters.filterField.comparator.Link.isNotNull": "is not null",
  "simpleSearchForm.filters.filterField.comparator.Link.isSet": "is set",
  "simpleSearchForm.filters.filterField.comparator.Link.isNotSet": "is not set",

  "simpleSearchForm.filters.filterField.comparator.Array.isEmpty": "No",
  "simpleSearchForm.filters.filterField.comparator.Array.isNotEmpty": "Yes",

  "simpleSearchForm.filters.filterField.comparator.Float.==": "equals",
  "simpleSearchForm.filters.filterField.comparator.Float.!=": "does not equal",
  "simpleSearchForm.filters.filterField.comparator.Float.>": "greater than",
  "simpleSearchForm.filters.filterField.comparator.Float.>=": "greater than or equal to",
  "simpleSearchForm.filters.filterField.comparator.Float.<": "less than",
  "simpleSearchForm.filters.filterField.comparator.Float.<=": "less than or equal to",
  "simpleSearchForm.filters.filterField.comparator.Float.isNull": "is null",
  "simpleSearchForm.filters.filterField.comparator.Float.isNotNull": "is not null",
  "simpleSearchForm.filters.filterField.comparator.Float.isSet": "is set",
  "simpleSearchForm.filters.filterField.comparator.Float.isNotSet": "is not set",

  "simpleSearchForm.filters.filterField.comparator.Integer.==": "equals",
  "simpleSearchForm.filters.filterField.comparator.Integer.!=": "does not equal",
  "simpleSearchForm.filters.filterField.comparator.Integer.>": "greater than",
  "simpleSearchForm.filters.filterField.comparator.Integer.>=": "greater than or equal to",
  "simpleSearchForm.filters.filterField.comparator.Integer.<": "less than",
  "simpleSearchForm.filters.filterField.comparator.Integer.<=": "less than or equal to",
  "simpleSearchForm.filters.filterField.comparator.Integer.isNull": "is null",
  "simpleSearchForm.filters.filterField.comparator.Integer.isNotNull": "is not null",
  "simpleSearchForm.filters.filterField.comparator.Integer.isSet": "is set",
  "simpleSearchForm.filters.filterField.comparator.Integer.isNotSet": "is not set",


  "simpleSearchForm.filters.filterField.comparator.Boolean.==": "is",
  "simpleSearchForm.filters.filterField.comparator.Boolean.!=": "is not",
  "simpleSearchForm.filters.filterField.comparator.Boolean.isNull": "is null",
  "simpleSearchForm.filters.filterField.comparator.Boolean.isNotNull": "is not null",
  "simpleSearchForm.filters.filterField.comparator.Boolean.isSet": "is set",
  "simpleSearchForm.filters.filterField.comparator.Boolean.isNotSet": "is not set",

  "simpleSearchForm.filters.filterField.comparator.Enum.==": "is",
  "simpleSearchForm.filters.filterField.comparator.Enum.!=": "is not",
  "simpleSearchForm.filters.filterField.comparator.Enum.isNull": "is null",
  "simpleSearchForm.filters.filterField.comparator.Enum.isNotNull": "is not null",
  "simpleSearchForm.filters.filterField.comparator.Enum.isSet": "is set",
  "simpleSearchForm.filters.filterField.comparator.Enum.isNotSet": "is not set",


  "simpleSearchForm.filters.filterField.comparator.UUID.==": "is",
  "simpleSearchForm.filters.filterField.comparator.UUID.!=": "is not",
  "simpleSearchForm.filters.filterField.comparator.UUID.isNull": "is null",
  "simpleSearchForm.filters.filterField.comparator.UUID.isNotNull": "is not null",
  "simpleSearchForm.filters.filterField.comparator.UUID.isSet": "is set",
  "simpleSearchForm.filters.filterField.comparator.UUID.isNotSet": "is not set",

  "simpleSearchForm.matches": "Search",

  "simpleSearchForm.results": "Results display",
  "simpleSearchForm.results.columns": "Columns",
  "simpleSearchForm.results.column": "Column",
  "simpleSearchForm.results.resultDeleteAria": "Remove column {index}",
  "simpleSearchForm.results.label": "Label",
  "simpleSearchForm.results.addResult": "Add column",
  "simpleSearchForm.results.minimumWarning": "Error: Results display must contain at least one column.",

  "simpleSearchForm.sort": "Sort",
  "simpleSearchForm.sort.sortBy": "Sort by",
  "simpleSearchForm.sort.sortDirection": "Sort direction",

  "simpleSearchForm.configurableProperties.numberOfRows": "Number of rows",
  "simpleSearchForm.configurableProperties.urlLink": "Url link",

  "simpleSearch.widget.nFoundBadge": "{total} found",
  "simpleSearch.widget.linkText": "Link to app",
  "simpleSearch.widget.linkTextForWidget": "{linkText} for widget: {widgetName}",
  "simpleSearch.widget.noResultFound": "No results found",
  "simpleSearch.contentError": "Content cannot be displayed. ",
  "simpleSearch.errorDetails": "Error details",
  "simpleSearch.errorDescription": "The following occurred, preventing the display of content in the widget:"
}